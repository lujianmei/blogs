---
layout: post-personal
title: Work Note in 2015
description: ""
modified: 
category: personal
tags: []
image:
  feature: texture-feature-05.jpg
  credit: 
  creditlink: 
---

<section id="table-of-contents" class="toc">
  <header>
    <h3>Contents</h3>
  </header>
<div id="drawer" markdown="1">
*  Auto generated table of contents
{:toc}
</div>
</section><!-- /#table-of-contents -->

# 前端框架项目

## 前端框架选型评估

## 开发流程改造

1. 代码管理流程

2. 开发工具灵感

3. 页面设计原则
  * 通过js处理

将页面按模板进行拆分，通过load("file path")的方式分别加载页面内容；
此方法仅能处理当页面内容较少或者页面数量较少时使用，它增加了页面的请求数量，并需要对后加载的内容重新进行js，css绑定，会消耗过多内存；
   * 通过shtml处理

通过将页面内容分成不同Shtml，因此可以通过服务端进行页面组合，但当使用了cdn后，页面是否还能正常按终端缓存需要与cdn进行确认；
即在同一个目录下不同终端可能会缓存不同文件内容；

   * 响应式原则
   
响应式支持需要通过CSS实现，才能确保同时支持的终端页面加载速度要求；
    
   * 大小限定
   
使用EM来限定宽度高度尺寸；

## 框架选型结果

1. Jquery Mobile
+ 为什么要使用Jquery Mobile
  * 使用现成社区资源
  
使用HTML5和JavaSript构建一个手机应用，你需要写很多JavaScript代码。然而，带有触摸
屏的设备的UI控制和处理与标准的Web应用程序非常不同。因此框架解决了这些浏览器的兼容性及稳定性；
  * 现成的成熟的功能组件
  
Jquery Mobile已经包含一些基础性组件，如Button, List-view, Page-list, Grid-System, Responsive等

2. Jquery UI
+ 为什么要使用Jquery UI

+ Jquery UI已包含功能组件
   * 可折叠框(Accordion)
   * 自动完成(Autocomplete)
   * 按钮(Button)
   * 时间控件(Datepicker)
   * 对话框(Dialog)
   * 菜单(Menu)
   * 进度条(Progressbar)
   * 下拉框(Selectmenu)
   * 滑动条(Slider)
   * 


3. 其它基础组件
+ 基础控件校验

使用jquery.validate.js组件来支持对控件的校验；

+ 基础数据绑定

使用angularjs组件来支持数据绑定性校验；可以通过angular做autocomplete功能；（jquery.autocomplete.js也可以处理）
backbone.js + Underscore.js + Router.js也可以支持对开发进行MVC改造；
+ 基础控件

暂时确定为使用jquery.mobile.js来支持基础控件，为同时满足PC与Mobile的支持；

+ 国际化控件

可使用jquery.i18n.js来支持直接通过前端对页面进行国际化改造，目前在wcm中已经实现了通过扩展语言置标进行直接发布时替换语言功能；

+ 信息提示窗口

如果jquery.mobile未包含信息提示窗口，可以使用jquery.message.js来支持信息提示窗口组件，但要求message插件需要同时支持手机与pc端；

+ 密码安全校验

使用jquery.password.validate.js组件支持对密码结构进行校验；

+ 时间比较控件

通过对时间结构的比较，显示支持国际化的时间显示，使用jquery.prettydate;

+ 交互组件控件

Jquery.ui.js库包含大量的交互式组件，可以通过集成它来包含已经开发完成并测试稳定的控件部分，JqueryUI支持IE8+；(是否与移动版本相同？)

+ 模块加载管理

Require.js来对大量的js文件的加载进行模块化管理，管理其文件的依赖关系，管理其资源下载；以满足团队协作、模块复用、单元测试等等一系列复杂的需求;提供代码的模块化快速开发及代码重用性；（是否将所有页面的js文件进行模块化管理，并通过独立域名统一版本？）

+ 测试框架
Qunit.js用来承担对模块化前端开发的功能测试，Jquery, Jquery Mobile, Jquery UI默认支持Qunit.js的测试；

+ 需要新增开发的组件



# 官网响应式评估

1. 评估可能性及什么时间是可以的

2. 成本评估

3. 团队分析

中国的一些营销活动，一些旧的页面无法再被更新成响应式的部分需要梳理并选择是否放弃
商用产品部分，售后部分，老的营销活动，在线的营销活动；
商用：产品，解决方案；
4. 子网站外链处理

重新梳理所有子站链接，子站链接
